variables:
    PROJECT_PREFIX: front

stages:
  - lint
  - test
  - build
  - deploy
  - stop

before_script:
  - export TAG=$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  - cd docker

merge_test:
  stage: test
  environment:
    name: merge/merge_${CI_MERGE_REQUEST_ID}
  script:
    - echo "ok"
  only:
    - merge_requests
  tags:
    - test

lint-style:
    stage: lint
    image: node:14.13.1-alpine
    before_script:
      - yarn install --cache-folder .yarn --frozen-lockfile --ignore-scripts
    cache:
      paths:
        - node_modules/
        - .yarn
    script:
        - yarn lint:style
    only:
        - merge_requests
        - branches
    except:
        - /^release.*$/

lint-es:
    stage: lint
    image: node:14.13.1-alpine
    before_script:
      - yarn install --cache-folder .yarn --frozen-lockfile --ignore-scripts
    cache:
      paths:
        - node_modules/
        - .yarn
    script:
        - yarn lint:es
    only:
        - merge_requests
        - branches
    except:
        - /^release.*$/

build-img:
    stage: build
    script:
        - docker-compose -p ${PROJECT_PREFIX}_${CI_COMMIT_REF_SLUG} -f docker-compose-review.yml build
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker-compose -p ${PROJECT_PREFIX}_${CI_COMMIT_REF_SLUG} -f docker-compose-review.yml push
    tags:
        - test
    only:
        - master
        - /^release.*$/

deploy_test:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -p api_test -f docker-compose-review.yml pull || exit 1
    - docker-compose -p api_test -f docker-compose-review.yml up -d
  only:
    - master
  tags:
    - test

deploy_prod:
  stage: deploy
  script:
    - docker-compose -p prod -f docker-compose-prod.yml pull || exit 1
    - docker-compose -p prod -f docker-compose-prod.yml up -d
    - ./create_release_mr.sh
  only:
    - /^release.*$/
  when: manual
  tags:
    - prod




