{
    "parser": "@typescript-eslint/parser",
    "reportUnusedDisableDirectives": true,
    "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaVersion": 6,
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true,
            "modules": true
        }
    },
    "ignorePatterns": [
        "code-*.ts",
        ".git/",
        ".idea/",
        "__fixtures__/",
        "tools/",
        "webpack.config.js",
        "postcss.config.js",
        "i18next-scanner.config.js",
        "lib/"
    ],
    "plugins": [
        "@typescript-eslint",
        "react-hooks",
        "react"
    ],
    "settings": {
        "react": {
            "pragma": "React",
            "version": "detect"
        }
    },
    "rules": {
        "brace-style": "off",
        "camelcase": "off",
        "comma-spacing": "off",
        "func-call-spacing": "off",
        "indent": "off",
        "no-dupe-class-members": "off",
        "no-empty-function": "off",
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-magic-numbers": "off",
        "no-unused-expressions": "off",
        "no-unused-vars": "off",
        "no-useless-constructor": "off",
        "quotes": "off",
        "require-await": "off",
        "semi": "off",
        "space-before-function-paren": "off",
        "for-direction": "error",
        "getter-return": "off",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-console": ["error", {
            "allow": ["warn", "error", "info"]
        }],
        "no-constant-condition": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-misleading-character-class": "error",
        "no-obj-calls": "error",
        "no-prototype-builtins": "error",
        "no-regex-spaces": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "accessor-pairs": "error",
        "array-callback-return": "error",
        "block-scoped-var": "error",
        "class-methods-use-this": "off",
        "curly": "error",
        "default-param-last": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "grouped-accessor-pairs": "error",
        "guard-for-in": "error",
        "max-classes-per-file": ["error", 1],
        "no-alert": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-constructor-return": "error",
        "no-div-regex": "error",
        "no-else-return": "error",
        "no-empty-pattern": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-fallthrough": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-invalid-this": "off",
        "no-iterator": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-loop-func": "error",
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-throw-literal": "error",
        "no-unmodified-loop-condition": "error",
        "no-unused-labels": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-concat": "error",
        "no-useless-escape": "error",
        "no-useless-return": "error",
        "no-with": "error",
        "prefer-named-capture-group": "off",
        "prefer-promise-reject-errors": "error",
        "prefer-regex-literals": "error",
        "radix": "error",
        "vars-on-top": "error",
        "yoda": "error",
        "no-delete-var": "error",
        "no-label-var": "error",
        "no-shadow": "error",
        "no-shadow-restricted-names": "error",
        "no-undef": "off",
        "no-undef-init": "error",
        "no-undefined": "off",
        "no-use-before-define": "off",
        "handle-callback-err": "error",
        "no-buffer-constructor": "error",
        "no-mixed-requires": "error",
        "no-new-require": "error",
        "no-path-concat": "error",
        "array-bracket-newline": ["error", "consistent"],
        "array-bracket-spacing": ["error", "never"],
        "array-element-newline": ["error", "consistent"],
        "block-spacing": "error",
        "comma-dangle": "error",
        "comma-style": "error",
        "computed-property-spacing": "error",
        "function-call-argument-newline": ["error", "consistent"],
        "implicit-arrow-linebreak": "error",
        "jsx-quotes": "error",
        "key-spacing": ["error", {
            "align": "colon"
        }],
        "keyword-spacing": ["error", {
            "overrides": {
                "if": { "after": false },
                "for": { "after": false },
                "while": { "after": false },
                "catch": { "after": false }
            }
        }],
        "line-comment-position": ["error", {
            "position": "above"
        }],
        "linebreak-style": "error",
        "lines-around-comment": "error",
        "lines-between-class-members": "error",
        "max-params": ["error", 10],
        "max-statements-per-line": "error",
        "new-cap": "off",
        "newline-per-chained-call": ["off", { "ignoreChainWithDepth": 2 }],
        "no-inline-comments": "off",
        "no-mixed-spaces-and-tabs": "error",
        "no-multi-assign": "error",
        "no-multiple-empty-lines": "error",
        "no-negated-condition": "off",
        "no-nested-ternary": "error",
        "no-new-object": "error",
        "no-tabs": "error",
        "no-trailing-spaces": "error",
        "no-underscore-dangle": "off",
        "no-unneeded-ternary": "error",
        "no-whitespace-before-property": "error",
        "object-curly-newline": ["error", {
            "consistent": true
        }],
        "object-curly-spacing": ["error", "always"],
        "one-var-declaration-per-line": ["error", "initializations"],
        "operator-linebreak": ["error", "none"],
        "padded-blocks": ["error", {
            "blocks": "never",
            "switches": "never"
        }],
        "padding-line-between-statements": ["error", {
            "blankLine": "always",
            "prev": ["const", "let", "var"],
            "next": "*"
        }, {
            "blankLine": "any",
            "prev": ["const", "let", "var"],
            "next": ["const", "let", "var"]
        }, {
            "blankLine": "always",
            "prev": "*",
            "next": ["return", "if", "export"]
        }, {
            "blankLine": "any",
            "prev": "export",
            "next": "export"
        }],
        "prefer-object-spread": "error",
        "quote-props": ["error", "consistent"],
        "semi-spacing": "error",
        "semi-style": "error",
        "space-before-blocks": "error",
        "space-in-parens": "error",
        "space-infix-ops": "error",
        "space-unary-ops": ["error", {
            "words": true,
            "nonwords": false,
            "overrides": {
                "void": false
            }
        }],
        "spaced-comment": "error",
        "unicode-bom": "error",
        "arrow-body-style": "off",
        "arrow-parens": "error",
        "arrow-spacing": "error",
        "constructor-super": "error",
        "no-class-assign": "error",
        "no-confusing-arrow": "error",
        "no-const-assign": "error",
        "no-duplicate-imports": "error",
        "no-new-symbol": "error",
        "no-this-before-super": "error",
        "no-useless-computed-key": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-destructuring": "off",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "require-yield": "error",
        "rest-spread-spacing": "error",
        "symbol-description": "error",
        "template-curly-spacing": "error",

        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": ["error", {
            "default": "generic"
        }],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/ban-types": ["error", {
            "types": {
                "String": {
                    "message": "Use string instead",
                    "fixWith": "string"
                }
            }
        }],
        "@typescript-eslint/brace-style": ["error"],
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/comma-spacing": ["error"],
        "@typescript-eslint/consistent-type-assertions": ["error", {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
        }],
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/default-param-last": ["error"],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/func-call-spacing": ["error", "never"],
        "@typescript-eslint/indent": ["error", 4],
        "@typescript-eslint/member-delimiter-style": ["error", {
            "multiline": {
                "delimiter": "comma",
                "requireLast": false
            },
            "singleline": {
                "delimiter": "comma",
                "requireLast": false
            }
        }],
        "@typescript-eslint/member-naming": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": ["error", {
            "selector": "default",
            "format": ["camelCase"]
        }, {
            "selector": "interface",
            "format": ["PascalCase"],
            "prefix": ["I"]
        }, {
            "selector": "variable",
            "types": ["function"],
            "leadingUnderscore": "allow",
            "format": ["PascalCase", "camelCase"]
        }, {
            "selector": "variable",
            "format": ["camelCase", "snake_case", "UPPER_CASE"]
        }, {
            "selector": "class",
            "format": ["PascalCase"]
        }, {
            "selector": "property",
            "filter": {
                "regex": "(?:(:?[a-z-]+)__(:?[a-z-]+)(?:_(:?[a-z-]+))?|__html)",
                "match": false
            },
            "leadingUnderscore": "allow",
            "format": ["snake_case", "camelCase", "PascalCase"]
        }, {
            "selector": "property",
            "custom": {
                "regex": "(?:(:?[a-z-]+)__(:?[a-z-]+)(?:_(:?[a-z-]+))?|__html)",
                "match": true
            },
            "format": null
        }, {
            "selector": "parameter",
            "format": ["PascalCase", "camelCase", "snake_case"]
        }, {
            "selector": "method",
            "leadingUnderscore": "allow",
            "format": ["camelCase"]
        }, {
            "selector": "typeAlias",
            "format": ["PascalCase"],
            "prefix": ["T"]
        }, {
            "selector": "enumMember",
            "format": ["PascalCase"]
        }, {
            "selector": "enum",
            "format": ["PascalCase"],
            "prefix": ["E"]
        }, {
            "selector": "typeParameter",
            "format": ["PascalCase"],
            "prefix": ["T"]
        }],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": ["error", {
            "allowSingleExtends": false
        }],
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": "error",
        "@typescript-eslint/no-floating-promises": ["error", {
            "ignoreVoid": true
        }],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": ["error", {
            "checksConditionals": false,
            "checksVoidReturn": true
        }],
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-untyped-public-signature": "off",
        "@typescript-eslint/no-unused-vars-experimental": ["error", {
            "ignoreArgsIfArgsAfterAreUsed": true
        }],
        "@typescript-eslint/no-unused-expressions": ["error", {
            "allowShortCircuit": true
        }],
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-readonly": "off",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/require-array-sort-compare": "error",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/space-before-function-paren": ["error", {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
        }],
        "@typescript-eslint/restrict-template-expressions": ["off", {
            "allowNumber": true,
            "allowBoolean": true,
            "allowNullable": true,
            "allowAny": true
        }],
        "@typescript-eslint/quotes": ["error", "single", {
            "avoidEscape": true
        }],
        "@typescript-eslint/prefer-nullish-coalescing": ["off", {
            "ignoreMixedLogicalExpressions": true,
            "ignoreConditionalTests": true
        }],
        "@typescript-eslint/no-unnecessary-condition": ["off", {
            "ignoreRhs": true
        }],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "off",

        "react/jsx-boolean-value": ["error", "always"],
        "react/jsx-child-element-spacing": "off",
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-closing-tag-location": "error",
        "react/jsx-curly-brace-presence": ["error", "never"],
        "react/jsx-curly-newline": "error",
        "react/jsx-curly-spacing": ["error", {
            "when": "never"
        }],
        "react/jsx-equals-spacing": "error",
        "react/jsx-filename-extension": ["error", {
            "extensions": [".tsx"]
        }],
        "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
        "react/jsx-fragments": ["error", "element"],
        "react/jsx-handler-names": ["off", {
            "eventHandlerPrefix": "on",
            "eventHandlerPropPrefix": "on"
        }],
        "react/jsx-indent": ["error", 4, {
            "checkAttributes": true
        }],
        "react/jsx-indent-props": ["error", 4],
        "react/jsx-key": "error",
        "react/jsx-max-props-per-line": ["error", {
            "maximum": 5,
            "when": "multiline"
        }],
        "react/jsx-no-bind": ["error", {
            "allowArrowFunctions": true
        }],
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-no-literals": ["off", {
            "noStrings": true
        }],
        "react/jsx-no-script-url": "error",
        "react/jsx-no-target-blank": ["error", {
            "enforceDynamicLinks": "never"
        }],
        "react/jsx-no-undef": "error",
        "react/jsx-no-useless-fragment": "error",
        "react/jsx-one-expression-per-line": ["off", {
            "allow": "single-child"
        }],
        "react/jsx-pascal-case": ["error", {
            "ignore": ["UI", "_icon", "SVG"]
        }],
        "react/jsx-props-no-multi-spaces": "error",
        "react/jsx-tag-spacing": "error",
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/no-deprecated": "error",
        "react/no-did-mount-set-state": "error",
        "react/no-did-update-set-state": "error",
        "react/no-direct-mutation-state": "error",
        "react/no-find-dom-node": "error",
        "react/no-render-return-value": "error",
        "react/no-string-refs": "error",
        "react/no-this-in-sfc": "error",
        "react/no-unescaped-entities": "off",
        "react/no-unknown-property": "error",
        "react/no-unused-prop-types": "error",
        "react/no-unused-state": "error",
        "react/prefer-es6-class": "error",
        "react/react-in-jsx-scope": "error"
    }
}
