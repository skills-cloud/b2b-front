/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Code200 = RequestRequirementRead;
export type ID = number;
export type NoName = string;
export type ParentId = string;
export type CompetenceId = number;
export type NoName1 = 1 | 100 | 3 | 5;
export type ID1 = number;
export type RequestRequirementId = string;
export type NoName2 = number;
export type NoName3 = number;
export type NoName4 = string;
/**
 * float
 */
export type NoName5 = number;
export type ID2 = number;
export type NoName6 = number;
export type NoName7 = string;
export type NoName8 = string;
export type ID3 = number;
export type NoName9 = boolean;
export type NoName10 = string;
export type PositionId = number;
export type RequestId = number;
export type NoName11 = number;
export type NoName12 = string;
export type ID4 = number;
export type NoName13 = boolean;
export type NoName14 = string;
export type TypeOfEmploymentId = number;
export type NoName15 = string;
export type NoName16 = string;
export type ID5 = number;
export type NoName17 = boolean;
export type NoName18 = string;
export type NoName19 = string;
export type ID6 = number;
export type NoName20 = boolean;
export type NoName21 = string;
export type WorkLocationCityId = number;

export interface RequestRequirementRead {
    competencies?: RequestRequirementCompetenceRead[];
    count?: NoName3;
    description?: NoName4;
    experience_years?: NoName5;
    id?: ID2;
    max_price?: NoName6;
    name?: NoName7;
    position?: Position;
    position_id?: PositionId;
    request_id: RequestId;
    sorting?: NoName11;
    type_of_employment?: TypeOfEmployment;
    type_of_employment_id?: TypeOfEmploymentId;
    work_location_address?: NoName15;
    work_location_city?: City;
    work_location_city_id?: WorkLocationCityId;
}
export interface RequestRequirementCompetenceRead {
    competence?: Competence;
    competence_id: CompetenceId;
    experience_years?: NoName1;
    id?: ID1;
    request_requirement_id?: RequestRequirementId;
    sorting?: NoName2;
}
export interface Competence {
    id?: ID;
    name: NoName;
    parent_id?: ParentId;
}
export interface Position {
    description?: NoName8;
    id?: ID3;
    is_verified?: NoName9;
    name: NoName10;
}
export interface TypeOfEmployment {
    description?: NoName12;
    id?: ID4;
    is_verified?: NoName13;
    name: NoName14;
}
export interface City {
    country: Country;
    description?: NoName19;
    id?: ID6;
    is_verified?: NoName20;
    name: NoName21;
}
export interface Country {
    description?: NoName16;
    id?: ID5;
    is_verified?: NoName17;
    name: NoName18;
}
