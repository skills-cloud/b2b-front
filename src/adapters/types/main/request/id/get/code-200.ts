/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Code200 = RequestRead;
export type NoName = string;
export type NoName1 = string;
export type ID = number;
export type NoName2 = string;
export type ID1 = number;
export type NoName3 = boolean;
export type NoName4 = string;
export type NoName5 = number;
export type NoName6 = number;
export type NoName7 = string;
export type NoName8 = string;
export type NoName9 = string;
export type NoName10 = string;
export type ID2 = number;
export type NoName11 = number;
export type NoName12 = string;
export type ID3 = number;
export type NoName13 = string;
export type Photo = string;
export type NoName14 = number;
export type NoName15 = string;
export type NoName16 = string;
export type ID4 = number;
export type NoName17 = boolean;
export type NoName18 = string;
export type NoName19 = number;
export type NoName20 = number;
export type RequestsCount = number;
export type NoName21 = number;
export type NoName22 = string;
export type NoName23 = number;
export type NoName24 = 10 | 20 | 30;
export type NoName25 = string;
export type NoName26 = string;
export type ID5 = number;
export type NoName27 = string;
export type NoName28 = string;
/**
 * На текущий момент не используется.<br>Надо задавать связку с проектом заказчика
 */
export type NoName29 = number;
export type NoName30 = number;
export type ID6 = number;
export type NoName31 = string;
export type ParentId = string;
export type CompetenceId = number;
/**
 * `1` : *Менее года*
 * `3` : *1 – 3 года*
 * `5` : *3 - 5 лет*
 * `100` : *Более 5 лет*
 */
export type NoName32 = 1 | 100 | 3 | 5;
export type ID7 = number;
export type RequestRequirementId = string;
export type NoName33 = number;
export type NoName34 = number;
export type NoName35 = string;
export type CitizenshipId = number;
export type CityId = number;
export type CountryId = number;
export type NoName36 = 'all' | 'weekends' | 'workdays';
export type NoName37 = string;
export type NoName38 = 'F' | 'M';
export type ID8 = number;
export type NoName39 = boolean;
export type NoName40 = string;
export type NoName41 = string;
export type Photo1 = string;
export type NoName42 = number;
export type NoName43 = string;
export type NoName44 = string;
export type UserId = number;
export type NoName45 = string;
/**
 * float
 */
export type NoName46 = number;
export type ID9 = number;
export type NoName47 = number;
export type NoName48 = string;
export type NoName49 = string;
export type ID10 = number;
export type NoName50 = boolean;
export type NoName51 = string;
export type PositionId = number;
export type RequestId = number;
export type NoName52 = number;
export type NoName53 = string;
export type ID11 = number;
export type NoName54 = boolean;
export type NoName55 = string;
export type TypeOfEmploymentId = number;
export type NoName56 = string;
export type NoName57 = string;
export type ID12 = number;
export type NoName58 = boolean;
export type NoName59 = string;
export type NoName60 = string;
export type ID13 = number;
export type NoName61 = boolean;
export type NoName62 = string;
export type WorkLocationCityId = number;
export type RequirementsCountSum = number;
export type NoName63 = number;
export type NoName64 = string;
export type NoName65 = 'closed' | 'done' | 'draft' | 'in_progress';
export type NoName66 = string;
export type ID14 = number;
export type NoName67 = string;
export type NoName68 = number;

export interface RequestRead {
    deadline_date?: NoName;
    description?: NoName1;
    id?: ID;
    industry_sector?: IndustrySector;
    industry_sector_id?: NoName5;
    manager_id?: NoName6;
    organization_project?: OrganizationProjectInline;
    organization_project_id: NoName23;
    priority?: NoName24;
    project?: ProjectInline;
    project_id?: NoName29;
    recruiter?: UserInline;
    recruiter_id?: NoName30;
    requirements?: RequestRequirementRead[];
    requirements_count_sum?: RequirementsCountSum;
    resource_manager?: UserInline;
    resource_manager_id?: NoName63;
    start_date?: NoName64;
    status?: NoName65;
    title?: NoName66;
    type?: RequestType;
    type_id?: NoName68;
}
export interface IndustrySector {
    description?: NoName2;
    id?: ID1;
    is_verified?: NoName3;
    name: NoName4;
}
export interface OrganizationProjectInline {
    created_at?: NoName7;
    date_from?: NoName8;
    date_to?: NoName9;
    description?: NoName10;
    id?: ID2;
    industry_sector?: IndustrySector;
    industry_sector_id?: NoName11;
    manager?: UserInline;
    manager_id?: NoName14;
    name: NoName15;
    organization?: Organization;
    organization_id: NoName19;
    recruiters?: UserInline[];
    recruiters_ids?: NoName20[];
    requests_count?: RequestsCount;
    resource_managers?: UserInline[];
    resource_managers_ids?: NoName21[];
    updated_at?: NoName22;
}
export interface UserInline {
    first_name: NoName12;
    id?: ID3;
    last_name: NoName13;
    photo?: Photo;
}
export interface Organization {
    description?: NoName16;
    id?: ID4;
    is_customer?: NoName17;
    name: NoName18;
}
export interface ProjectInline {
    created_at?: NoName25;
    description?: NoName26;
    id?: ID5;
    name: NoName27;
    recruiters?: UserInline[];
    recruiters_ids?: number[];
    resource_managers?: UserInline[];
    resource_managers_ids?: number[];
    updated_at?: NoName28;
}
export interface RequestRequirementRead {
    competencies?: RequestRequirementCompetenceRead[];
    count?: NoName34;
    cv_list?: CvInlineShort[];
    cv_list_ids?: number[];
    description?: NoName45;
    experience_years?: NoName46;
    id?: ID9;
    max_price?: NoName47;
    name?: NoName48;
    position?: Position;
    position_id?: PositionId;
    request_id: RequestId;
    sorting?: NoName52;
    type_of_employment?: TypeOfEmployment;
    type_of_employment_id?: TypeOfEmploymentId;
    work_location_address?: NoName56;
    work_location_city?: City;
    work_location_city_id?: WorkLocationCityId;
}
export interface RequestRequirementCompetenceRead {
    competence?: Competence;
    competence_id: CompetenceId;
    experience_years?: NoName32;
    id?: ID7;
    request_requirement_id?: RequestRequirementId;
    sorting?: NoName33;
}
export interface Competence {
    id?: ID6;
    name: NoName31;
    parent_id?: ParentId;
}
export interface CvInlineShort {
    birth_date?: NoName35;
    citizenship_id?: CitizenshipId;
    city_id?: CityId;
    country_id?: CountryId;
    days_to_contact?: null | NoName36;
    first_name?: NoName37;
    gender?: null | NoName38;
    id?: ID8;
    is_resource_owner?: NoName39;
    last_name?: NoName40;
    middle_name?: NoName41;
    photo?: Photo1;
    price?: NoName42;
    time_to_contact_from?: NoName43;
    time_to_contact_to?: NoName44;
    user_id?: UserId;
}
export interface Position {
    description?: NoName49;
    id?: ID10;
    is_verified?: NoName50;
    name: NoName51;
}
export interface TypeOfEmployment {
    description?: NoName53;
    id?: ID11;
    is_verified?: NoName54;
    name: NoName55;
}
export interface City {
    country: Country;
    description?: NoName60;
    id?: ID13;
    is_verified?: NoName61;
    name: NoName62;
}
export interface Country {
    description?: NoName57;
    id?: ID12;
    is_verified?: NoName58;
    name: NoName59;
}
export interface RequestType {
    id?: ID14;
    name: NoName67;
}
